apiVersion: v1
kind: ServiceAccount
metadata:
  name: eventrouter 
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eventrouter 
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventrouter 
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eventrouter
subjects:
- kind: ServiceAccount
  name: eventrouter
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventrouter
  namespace: kube-system
  labels:
    app: eventrouter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eventrouter
  template:
    metadata:
      labels:
        app: eventrouter
    spec:
      serviceAccount: eventrouter
      containers:
      - name: eventrouter
        image: ghcr.io/kuoss/eventrouter:latest
        command:
        - sh
        - -c
        - |
          /eventrouter -v 3 -logtostderr | tee -a /logs/event.log
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
        - mountPath: /logs
          name: vol-logs
      - name: logrotate
        image: ghcr.io/kuoss/logrotate:v1.0.1
        env:
        - name: LOGROTATE_ROTATE
          value: "2"
        - name: LOGROTATE_SIZE
          value: 100M
        - name: LOGROTATE_CRON
          value: '*/5 * * * *'
        - name: LOGROTATE_COMPRESS
          value: compress
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
        - mountPath: /logs
          name: vol-logs
      volumes:
      - emptyDir: {}
        name: vol-logs
